name: Re-run Actions by Comment

on:
  issue_comment:
    types: [created]

permissions:
  actions: write          # kr칛vs f칬r att re-runna
  issues: write           # f칬r att svara med en bekr칛ftelsekommentar
  pull-requests: read

jobs:
  rerun:
    # k칬r bara n칛r det 칛r en kommentar i en PR och kommandot matchar
    if: >
      github.event.issue.pull_request &&
      (
        contains(github.event.comment.body, '/rerun') ||
        contains(github.event.comment.body, '/rerun all') ||
        contains(github.event.comment.body, '/rerun failed')
      )
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Parse command & find latest workflow run for this PR
        id: find
        uses: actions/github-script@v7
        with:
          script: |
            const cmd = context.payload.comment.body.toLowerCase().trim();
            const mode = cmd.includes('/rerun failed') ? 'failed' : 'all';

            const {owner, repo} = context.repo;
            const prNumber = context.payload.issue.number;

            // H칛mta PR info (branch + head SHA)
            const pr = await github.rest.pulls.get({owner, repo, pull_number: prNumber});
            const branch = pr.data.head.ref;
            const headSha = pr.data.head.sha;

            // H칛mta senaste workflow-k칬rningar p친 PR-branch (exkludera denna workflow)
            const runsRes = await github.rest.actions.listWorkflowRunsForRepo({
              owner, repo, branch, per_page: 50, event: 'pull_request'
            });

            // V칛lj senaste run p친 exakt samma headSha, som INTE 칛r den h칛r workflowen
            const runs = runsRes.data.workflow_runs.filter(r =>
              r.head_sha === headSha && r.name !== process.env.GITHUB_WORKFLOW
            );

            if (!runs.length) {
              core.setFailed(`Hittade ingen workflow-k칬rning att k칬ra om f칬r branch '${branch}' (sha ${headSha}). Har du k칬rt Actions p친 den h칛r PR:en?`);
              return;
            }

            // Senaste k칬rningen (index 0 칛r nyast i API-svaret)
            const target = runs[0];

            core.info(`Target workflow run: id=${target.id}, name=${target.name}, status=${target.status}, conclusion=${target.conclusion}`);
            core.setOutput('run_id', String(target.id));
            core.setOutput('mode', mode);

      - name: Re-run (failed jobs)
        if: steps.find.outputs.mode == 'failed'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const run_id = Number(core.getInput('run_id'));
            await github.rest.actions.reRunFailedJobs({owner, repo, run_id});
            core.notice(`Triggat re-run av *misslyckade* jobb f칬r run_id ${run_id}`);
          result-encoding: string
        env:
          run_id: ${{ steps.find.outputs.run_id }}

      - name: Re-run (all jobs)
        if: steps.find.outputs.mode == 'all'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const run_id = Number(core.getInput('run_id'));
            await github.rest.actions.reRunWorkflow({owner, repo, run_id});
            core.notice(`Triggat re-run av *alla* jobb f칬r run_id ${run_id}`);
          result-encoding: string
        env:
          run_id: ${{ steps.find.outputs.run_id }}

      - name: Confirm in thread
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body.toLowerCase().includes('failed')
              ? '游대 Startade om **misslyckade** jobb p친 senaste k칬rningen f칬r den h칛r PR:en.'
              : '游대 Startade om **alla** jobb p친 senaste k칬rningen f칬r den h칛r PR:en.';
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.payload.issue.number,
              body
            })