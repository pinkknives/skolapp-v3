name: API E2E Smoke Test

on:
  workflow_dispatch:   # Manual trigger
  schedule:
    - cron: '0 8 * * *'  # Daily at 08:00 UTC

permissions:
  contents: read

concurrency:
  group: api-e2e-smoke-test
  cancel-in-progress: true

jobs:
  api-smoke-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Mask secrets for security
        run: |
          echo "::add-mask::${{ secrets.OPENAI_API_KEY }}"
          echo "::add-mask::${{ secrets.ABLY_SERVER_API_KEY }}"
          echo "::add-mask::${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          echo "::add-mask::${{ secrets.STRIPE_SECRET_KEY }}"

      - name: ‚úÖ Verify core secrets are set
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          set -e
          echo "üîç Checking core API secrets (required for basic functionality)..."
          
          [ -z "$NEXT_PUBLIC_SUPABASE_URL" ] && echo "‚ùå NEXT_PUBLIC_SUPABASE_URL not set" && exit 1 || echo "‚úÖ NEXT_PUBLIC_SUPABASE_URL is set"
          [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ] && echo "‚ùå NEXT_PUBLIC_SUPABASE_ANON_KEY not set" && exit 1 || echo "‚úÖ NEXT_PUBLIC_SUPABASE_ANON_KEY is set"
          [ -z "$SUPABASE_SERVICE_ROLE_KEY" ] && echo "‚ùå SUPABASE_SERVICE_ROLE_KEY not set" && exit 1 || echo "‚úÖ SUPABASE_SERVICE_ROLE_KEY is set"
          
          echo "‚úÖ All core secrets are configured"

      - name: ‚úÖ Check optional feature secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ABLY_SERVER_API_KEY: ${{ secrets.ABLY_SERVER_API_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
          echo "üîç Checking optional feature secrets..."
          
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "‚ö†Ô∏è  OPENAI_API_KEY not set - AI features will be disabled"
          else
            echo "‚úÖ OPENAI_API_KEY is set"
          fi
          
          if [ -z "$ABLY_SERVER_API_KEY" ]; then
            echo "‚ö†Ô∏è  ABLY_SERVER_API_KEY not set - Live Quiz features will be disabled"
          else
            echo "‚úÖ ABLY_SERVER_API_KEY is set"
          fi
          
          if [ -z "$STRIPE_SECRET_KEY" ]; then
            echo "‚ö†Ô∏è  STRIPE_SECRET_KEY not set - billing features will be disabled"
          else
            echo "‚úÖ STRIPE_SECRET_KEY is set"
          fi

      - name: üß™ Test OpenAI API
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_PROJECT_ID: ${{ secrets.OPENAI_PROJECT_ID }}
        run: |
          echo "üîç Testing OpenAI API connection..."
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "‚ö†Ô∏è OPENAI_API_KEY not set - skipping AI features test"
          else
            if npm run health:openai; then
              echo "‚úÖ OpenAI svar: \"OK fr√•n Actions\""
            else
              echo "‚ùå OpenAI API test failed"
              exit 1
            fi
          fi

      - name: üß™ Test Ably API  
        env:
          ABLY_SERVER_API_KEY: ${{ secrets.ABLY_SERVER_API_KEY }}
        run: |
          echo "üîç Testing Ably API connection..."
          if [ -z "$ABLY_SERVER_API_KEY" ]; then
            echo "‚ö†Ô∏è ABLY_SERVER_API_KEY not set - skipping Live Quiz features test"
          else
            if npm run health:ably; then
              echo "‚úÖ Ably time OK: [$(date +%s)000]"
            else
              echo "‚ùå Ably API test failed"
              exit 1
            fi
          fi

      - name: üß™ Test Supabase API
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "üîç Testing Supabase API connection..."
          if npm run health:supabase; then
            echo "‚úÖ Supabase query OK (fick tillbaka 1 rad)"
          else
            echo "‚ùå Supabase API test failed"
            exit 1
          fi

      - name: üß™ Test Stripe API
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
          echo "üîç Testing Stripe API connection..."
          if [ -z "$STRIPE_SECRET_KEY" ]; then
            echo "‚ö†Ô∏è STRIPE_SECRET_KEY not set - skipping billing features test"
          else
            if npm run health:stripe; then
              echo "‚úÖ Stripe account OK"
            else
              echo "‚ùå Stripe API test failed"
              exit 1
            fi
          fi

      - name: üß™ Test Skolverket API
        run: |
          echo "üîç Testing Skolverket API connection..."
          if npm run health:skolverket; then
            echo "‚úÖ Skolverket subjects OK"
          else
            echo "‚ö†Ô∏è Skolverket API test failed - curriculum features may be limited"
            echo "This is non-critical for core functionality"
          fi

      - name: ‚úÖ API smoke test completed
        run: |
          echo "üéâ API smoke test completed!"
          echo ""
          echo "Core functionality tested:"
          echo "‚úÖ Supabase API - Database operational"
          echo ""
          echo "Feature-specific APIs tested (if configured):"
          echo "- OpenAI API (AI features)"
          echo "- Ably API (Live Quiz features)"  
          echo "- Stripe API (billing features)"
          echo "- Skolverket API (curriculum data)"
          echo ""
          echo "See individual test steps above for detailed results."